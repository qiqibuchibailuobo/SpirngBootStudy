<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yq.demo.generator.TStudentDao">
  <resultMap id="BaseResultMap" type="cn.yq.demo.generator.TStudent">
    <id column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_sex" jdbcType="CHAR" property="stuSex" />
    <result column="stu_telphone" jdbcType="VARCHAR" property="stuTelphone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, class_id, stu_name, stu_sex, stu_telphone
  </sql>
  <select id="selectByExample" parameterType="cn.yq.demo.generator.TStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_student
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yq.demo.generator.TStudentExample">
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="stu_id" keyProperty="stuId" parameterType="cn.yq.demo.generator.TStudent" useGeneratedKeys="true">
    insert into t_student (class_id, stu_name, stu_sex, 
      stu_telphone)
    values (#{classId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=CHAR}, 
      #{stuTelphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="stu_id" keyProperty="stuId" parameterType="cn.yq.demo.generator.TStudent" useGeneratedKeys="true">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classId != null">
        class_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuSex != null">
        stu_sex,
      </if>
      <if test="stuTelphone != null">
        stu_telphone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        #{stuSex,jdbcType=CHAR},
      </if>
      <if test="stuTelphone != null">
        #{stuTelphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yq.demo.generator.TStudentExample" resultType="java.lang.Long">
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_student
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null">
        stu_sex = #{record.stuSex,jdbcType=CHAR},
      </if>
      <if test="record.stuTelphone != null">
        stu_telphone = #{record.stuTelphone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_student
    set stu_id = #{record.stuId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=CHAR},
      stu_telphone = #{record.stuTelphone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yq.demo.generator.TStudent">
    update t_student
    <set>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        stu_sex = #{stuSex,jdbcType=CHAR},
      </if>
      <if test="stuTelphone != null">
        stu_telphone = #{stuTelphone,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yq.demo.generator.TStudent">
    update t_student
    set class_id = #{classId,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=CHAR},
      stu_telphone = #{stuTelphone,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=VARCHAR}
  </update>
  <!-- 根据用户名和电话号码使用动态SQL<if>、<where>元素查询 -->
  <select id="findStudentByNameAndPhoneUseWhere" parameterType="cn.yq.demo.generator.TStudent"
          resultMap="BaseResultMap"
  >
    select * from t_student
    <where>
      <if test="stuName !=null and stuName !=''">
        and stu_name like concat('%',#{stuName},'%')
      </if>
      <if test="stuTelphone !=null and stuTelphone !=''">
        and stu_telphone= #{stuTelphone} 				 <!--数据库中的数据名： stu_telphone= #{telphone} ：实体的属性名 -->
      </if>
    </where>
  </select>
  <!-- 根据用户名和电话号码使用动态SQL<if>、<trim>元素查询 -->
  <select id="findStudentByNameAndPhoneUseTrim" parameterType="cn.yq.demo.generator.TStudent"
          resultMap="BaseResultMap"
  >
    select * from t_student
    <trim prefix="where" prefixOverrides="and">
      <if test="stuName !=null and stuName !=''">
        and stu_name like concat('%',#{stuName},'%')
      </if>
      <if test="stuTelphone !=null and stuTelphone !=''">
        and stu_telphone= #{stuTelphone}
      </if>
      <if test="stuName ==null and stuName ==''">
        and stu_telphone= #{stuTelphone}
      </if>
      <if test="stuTelphone ==null and stuTelphone ==''">
        and stu_name= #{stuName}
      </if>
    </trim>
  </select>
  <!-- 根据用户名和班级编号使用动态SQL的<choose>、<when>和<otherwise>元素查询 -->
  <select id="findStudentByNameAndClass" parameterType="cn.yq.demo.generator.TStudent"
          resultMap="BaseResultMap"

  >
    select * from t_student where 1=1
    <choose>
      <when test="stuName !=null and stuName !=''">
        and stu_name like concat('%',#{stuName}, '%')
      </when>
      <when test="classId !=null and classId !='' ">
        and class_id =#{classId}
      </when>
      <otherwise>
        and stu_telphone is not NULL
      </otherwise>
    </choose>
  </select>

  <!-- 根据提供的Student实例的值更新 -->
  <!-- <set>元素 -->
  <update id="updateStudent"  parameterType="map">
    update t_student
    <set>
      <if test="stuName !=null and stuName !=''">
        stu_name=#{stuName},
      </if>
      <if test="classId !=null and classId !=''">
        class_id=#{classId},
      </if>
      <if test="stuTelphone !=null and stuTelphone !=''">
        stu_telphone=#{stuTelphone},
      </if>
    </set>
    where stu_id=#{stuId}
  </update>
  <!-- 利用动态SQL<foreach>元素实现多班级学生信息查询 -->
  <!--<foreach>元素使用 -->
  <select id="findStudentByIds" parameterType="List"
          resultMap="BaseResultMap"
  >
    select * from t_student where class_id in
    <foreach item="classId" index="index" collection="list" open="("
             separator="," close=")">
      #{classId}
    </foreach>
  </select>
  <!-- 使用动态SQL<bind>元素完成删除数据库中学生表中姓名包含有‘向’的学生记录 -->
  <!--<bind>元素的使用：根据客户名模糊查询客户信息 -->
  <delete id="deleteStudentByName" parameterType="cn.yq.demo.generator.TStudent"
  >
    <!--_parameter.getStuName()也可直接写成传入的字段属性名，即username -->
    <bind name="pattern_name" value="'%'+_parameter.getStuName()+'%'" />
    delete from t_student
    where
    stu_name like #{pattern_name}
  </delete>
</mapper>